class Rectangle:
    def _init_(self, width, height):
        self.width = width
        self.height = height
        
    def _str_(self):
        return f"Rectangle(width={self.width}, height={self.height})"
        
    def set_width(self, width):
        self.width = width
        
    def set_height(self, height):
        self.height = height
        
    def get_area(self):
        return self.width * self.height
        
    def get_perimeter(self):
        return 2 * (self.width + self.height)
        
    def get_diagonal(self):
        return (self.width * 2 + self.height * 2) ** 0.5
        
    def get_picture(self):
        if self.width > 50 or self.height > 50:
            return "Too big for picture."
        return ("\n".join(["*"*self.width for _ in range(self.height)])) + "\n"
        
    def get_amount_inside(self, shape):
        return int(self.get_area() / shape.get_area())

class Square(Rectangle):
    def _init_(self, side):
        super()._init_(side, side)
        self.side = side
        
    def _str_(self):
        return f"Square(side={self.side})"
        
    def set_side(self, side):
        self.side = side
        self.width = side
        self.height = side


from shape_calculator import Rectangle, Square

# Create a Rectangle object
rect = Rectangle(10, 5)

# Test methods
print(rect.get_area())
rect.set_height(3)
print(rect.get_perimeter())
print(rect)
print(rect.get_picture())

# Create a Square object
sq = Square(9)

# Test methods
print(sq.get_area())
sq.set_side(4)
print(sq.get_diagonal())
print(sq)
print(sq.get_picture())

# Test get_amount_inside method
rect.set_height(8)
rect.set_width(16)
print(rect.get_amount_inside(sq))




